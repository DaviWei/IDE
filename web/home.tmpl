
{{$me :=  SoftUser }}
  <!DOCTYPE html>
<html class="full-height" lang="en">
  <head>
    <!-- Required meta tags always come first -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Home</title>
      <link rel="shortcut icon" href="/img/logo.png" />
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.2/css/bootstrap.min.css" integrity="sha384-y3tfxAZXuh4HwSYylfB+J125MxIs6mR5FOHamPBG064zB+AFeWH94NdvaCBm8qnd" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/dist/themes/default/style.min.css" />
     <link rel="stylesheet" type="text/css" href="dist/sweetalert.css">

      <link rel="stylesheet" type="text/css" href="dist/ss.css">
      <link rel="stylesheet" type="text/css" href="dist/jquery.terminal-0.10.8.min.css">
  </head>
  <body class="full-height">

    {{Css}}

  <!-- <nav class="navbar navbar-fixed-top navbar-light bg-faded">
  <a class="navbar-brand" href="/landing"><img src="/img/logo.png" style="display:inline;width:35px"> Strukture</a>
     <ul class="nav navbar-nav">
    
    <li class="nav-item">
      <a class="nav-link" href="/walk-thru">Walk-thru</a>
    </li> 
    <li class="nav-item">
      <a class="nav-link" target="_blank" href="/documentation">Documentation</a>
    </li> 

  </ul>
 <div class="form-inline pull-xs-right auto-marker">
    <button class="btn btn-primary-outline xtrigger" path="/api/new?type=0">New Package</button>
   <button class="btn btn-warning-outline open-terminal" onclick="toggleTerm()"><i class="fa fa-terminal"></i> Terminal</button>
    <a class="btn btn-warning-outline xtrigger" path="/api/get?type=15">Settings</a>
     <a class="btn btn-danger-outline" href="/api/logout">Logout</a>
  </div>
</nav>-->
  <style type="text/css">
   body,html {
    padding-top: 0;
    background: #333;
    overflow: hidden;
   }

   .pop-box {
        overflow-x: auto;
   }

   .pop-panel {

   }

   .right-bay {
    position: fixed;
    z-index: 3000;
    right:10px;
    top:10px;
   }



     
  </style>

  <div class="recop" style="    display:none;position: absolute;
    z-index: 10;
    background: rgba(51, 51, 51, 0.62);
    padding: 10px;
    bottom: -5px;
    border-radius: 8px;
    left: -6px;">
  <button class="btn btn-info-outline" onclick="CollapseGloj()" style="padding:5px;font-size:14px;"><i class="fa fa-arrow-right"></i> Show</button>
   <button onclick="toggleTerm()" class="btn btn-info-outline" style="padding:5px;font-size:14px;"><i class="fa fa-terminal"></i></button>
</div>
<div class="right-bay"></div>
    <div class="container-fluid full-height" id="panel">        
      <div class="row full-height " style="margin-bottom:15px;">
      <div class="col-sm-3 pop-box panel-k-left full-height over-flow-fix" style="-webkit-box-shadow: 14px 2px 5px -8px rgba(48,48,48,0.2);
-moz-box-shadow: 14px 2px 5px -8px rgba(48,48,48,0.2);
box-shadow: 14px 2px 5px -8px rgba(48,48,48,0.2);background:#fff; z-index: 10;">
  <div class="">
        <nav class="navbar bg-faded">
  <a class="navbar-brand" href="/home" style="font-size:1.0rem"><img class="" src="/img/logo.png" style="display:inline;width:35px"></a>
  
  <div class="form-inline pull-xs-right ">
      <button class="btn cps-side" onclick="CollapseGloj()" style="background:none;"><i class="fa fa-compress"></i> <span class="hidden-md-down">Collapse</span></button>
  </div>

 <!-- <div class="form-inline pull-xs-right auto-marker">
    <button class="btn btn-primary-outline xtrigger" path="/api/new?type=0">New Package</button>
   <button class="btn btn-warning-outline open-terminal" onclick="toggleTerm()"><i class="fa fa-terminal"></i> Terminal</button>
    <a class="btn btn-warning-outline xtrigger" path="/api/get?type=15">Settings</a>
     <a class="btn btn-danger-outline" href="/api/logout">Logout</a>
  </div> -->
</nav>

            <div class="text-center loader-prog"><h1><b><i class="fa fa-sun-o fa-spin"></i> </b></h1></div>

            <div class="row auto-marker">
          <div class="col-md-12"> <p>  <button class="btn btn-block btn-primary-outline xtrigger" path="/api/new?type=0">New <span class="hidden-md-down">Package</span> </button></p></div>
  <div class="col-md-12"> <p><button class="btn btn-block btn-primary-outline open-terminal" onclick="toggleTerm()"><i class="fa fa-terminal"></i> <span class="hidden-md-down">Terminal</span> </button></p></div>
</div>

 

      
   
  

      
        <p class="dimisser-btn" style="display:none;"><button class="btn btn-block btn-danger" onclick="ClearSideBay()"><b>Dismiss prompt</b></button></p>
        <div class="side-bay left-bay"></div>
               <div style="" >
 <p><label class=" "><i class="fa fa-square"></i> Packages</label><br /> <button onclick="updateTree()" class="btn btn-sm">REFRESH TREE</button></p>
          <div id="jstree"></div>
    </div>
   </div>
      </div>
      <div class="col-sm-9 cbn ready-one">
             <div class="text-center" style="padding:50px;"><img src="/img/logo.png" style="width:75px;"><h4>Strukture</h4></div>
      </div>
         
        <div class="col-sm-9 pop-panel over-flow-fix full-height panel-k-right ready-three cbn" style="padding:0;">
             <ul class="nav xnavs nav-tabs">
          
            </ul>
        </div>
      </div>
       <!-- <div class="row">

    
        <div class="col-sm-10 ">

              <div class="text-center" style="padding:50px;"><img src="/img/logo.png" style="width:75px;"><h4>Strukture</h4></div>
        </div>
         <div id="editor" style="height:600px" class="col-sm-10 cbn ready-two"></div>
        <div class="col-sm-10 ready-three cbn">
            
        </div>
  

      </div> -->
        
      

    </div>

    <div class="terminal-side">
  <button onclick="toggleTerm()" style="color:#fff;" type="button" class="close" data-dismiss="alert" aria-label="Close">
              <span class="fa fa-compress"></span> 
            </button>
        <div style="float: left;
    color: #6F6E6E;
    font-size: 11px;
    margin-left: 8px;">
          
          <button class="term-b" onclick="addtermwidth()"><i class="fa fa-arrow-left"></i> </button>
          <label>Width</label>
            <button class="term-b" onclick="redtermwidth()"><i class="fa fa-arrow-right"></i></button>
        </div>
         
            <div id="terminaldefault" class="terminal" style="clear:both"  ></div>
    </div>

    <div class="footer-bay">

    </div>
    {{JS}}
   

     <!-- Load RequireJS -->
    <script type="text/javascript" src="/dist/jquery.sidr.min.js"></script>
        <script type="text/javascript" src="dist/jquery.terminal-0.10.8.min.js"></script>
 <script type="text/javascript" src="dist/unix_formatting.js"></script>

<script src="/dist/src/ace.js"></script>
<script src="/dist/src/ext-language_tools.js"></script>
<script src="dist/sweetalert.min.js"></script>
    <script type="text/javascript">
    var working = false;
    var tabj = {};
    var editors = {};

    var termsize = 0;
    
    function addtermwidth(){
        if (termsize != 2){
          //below limit
          if(termsize == 0){
            termsize = 1;
              $(".terminal-side").css("width","50" + percentagetext)
          }
           else if(termsize == 1){
            termsize = 2;
              $(".terminal-side").css("width","95" + percentagetext)
          }
        }
    }

    function CollapseGloj(){
        if($(".panel-k-left").css('display') == "none"){

          $(".right-bay").removeClass("side-bay")
          $(".left-bay").addClass("side-bay")
          $(".panel-k-left").css('display',"block");
          $(".panel-k-right").addClass("col-sm-9");
          $(".panel-k-right").removeClass("col-sm-12");
          $(".recop").css("display","none");
        } else {
          $(".left-bay").removeClass("side-bay")
          $(".right-bay").addClass("side-bay")
          $(".panel-k-left").css('display',"none");
          $(".panel-k-right").removeClass("col-sm-9");
          $(".panel-k-right").addClass("col-sm-12");
          $(".recop").css("display","block");
        }
    }

    function redtermwidth(){
         if (termsize != 0){
          //below limit
          if(termsize == 1){
            termsize = 0;
              $(".terminal-side").css("width","320px")
          }
           else if(termsize == 2){
            termsize = 1;
              $(".terminal-side").css("width","50" + percentagetext)
          }
        }
    }

      var langTools = ace.require("ace/ext/language_tools");

        var rhymeCompleter = {
        getCompletions: function(editor, session, pos, prefix, callback) {
            if (prefix.length === 0) { callback(null, []); return }
            $.getJSON(
                "/api/complete?pref=" + prefix + "&pkg=" + $(".tabview.active").attr("pkg"),
                function(wordList) {
                    // wordList like [{"word":"flow","freq":24,"score":300,"flags":"bc","syllables":"1"}]
                    callback(null, wordList.map(function(ea) {
                        return {name: ea.word, value: ea.value, score: ea.score, meta: ea.meta}
                    }));
                })
        }
    }
    langTools.addCompleter(rhymeCompleter);

    function ClearSideBay(){
      $(".side-bay").html("");
    }

    $('.side-bay').bind("DOMSubtreeModified",function(){
     if ($(".side-bay").height() == 0){
        $(".dimisser-btn").css('display','none')
     } else   $(".dimisser-btn").css('display','block');
    return false;
    });

    function toggleTerm(){
        if($(".terminal-side").hasClass('active')){
            $(".terminal-side").removeClass('active');
            $(".terminal-side").css('display','none');
        } else {
            $(".terminal-side").addClass('active');
            $(".terminal-side").css('display','block');
        }
    }
    $(document).bind("ajaxSend", function(){
    if($(".terminal-side").hasClass('active') && termx != null){
            termx("[[b;#00FF00;]Request sent > ]",{flush:false})
    }
 });
    var working = false;
    var termx = null;
    jQuery(function($, undefined) {
    $('#terminaldefault').terminal(function(command, term) {
      termx = term.echo;
       if (!working){
        working = true;
        if (command !== '') {
          
          term.echo("[[b;#00FF00;]Sending request> ]")
          $.ajax({url:"/api/console",type:"POST",data:{command:command},success:function(html){
              

              term.echo(html);
              console.log(html)       
              term.echo("[[b;#00FF00;]Done]");
              working= false;  
          },error:function(m,e){
                working = false;
                 term.echo("[[b;#B0171F;]Error]")
           }})
        } else {
            working = false;
           term.echo('');
        }
        }
    }, {
        greetings: 'Welcome to the Strukture v1',
        name: 'struk_term',
        height: ($(".terminal-side").height() - 55),
        prompt: (working ? "":'{{ $me.Username }}@Strutkure $')
    });
});



    function SaveFile(editor, link,pkv){
      
        var payload = {type:"1",target:link,pkg:pkv};
        if ( link.includes("gosforceasapi/") ) {
            link_final = link.split("++()/")
            payload.target = link_final[0].replace("gosforceasapi/", "")
            payload.type = "13r";
        }
        payload["data"] = editors[editor].getValue();
      $.ajax({url:"/api/put", data: payload ,type:"POST",success:function(html){
        $(".side-bay").html(html);
      },error:function(e){
        $(".side-bay").html(e.responseText);
      }
    });
   }

  function SavePKG(typ, pkv,editor){
      
      var payload = {type:typ,pkg:pkv};
        payload["data"] = editors[editor].getValue();
      $.ajax({url:"/api/put", data: payload ,type:"POST",success:function(html){
        $(".side-bay").html(html);
      },error:function(e){
        $(".side-bay").html(e.responseText);
      }
    });
    }

      function BuildPKG( pkv){
        $(".side-bay").html("<h1 style='text-align:center;'><i class='fa fa-cog fa-spin'/></h1>")
        $(".side-bay").load("/api/build?pkg=" + pkv);
      }

      function ClearLogs( pkv){
        $(".side-bay").html("<h1 style='text-align:center;'><i class='fa fa-cog fa-spin'/></h1>")
        $(".side-bay").load("/api/empty?pkg=" + pkv);
      }

      function StartServer( pkv){
           $(".side-bay").html("<h1 style='text-align:center;'><i class='fa fa-cog fa-spin'/></h1>")
        $(".side-bay").load("/api/start?pkg=" + pkv);
      }

      function StopServer( pkv){
           $(".side-bay").html("<h1 style='text-align:center;'><i class='fa fa-cog fa-spin'/></h1>")
        $(".side-bay").load("/api/stop?pkg=" + pkv);
      }

      function SavePKGAndBuild(typ, pkv,editor){
      
      var payload = {type:typ,pkg:pkv};
        payload["data"] = editors[editor].getValue();
      $.ajax({url:"/api/put", data: payload ,type:"POST",success:function(html){
        $(".side-bay").load("/api/build?pkg=" + pkv);
      },error:function(e){
        $(".side-bay").load("/api/build?pkg=" + pkv);
      }
    });
    }

    function removeWelcome(){
      $.ajax({url:"/api/saw"})
      $(".welcome-card").remove();
    }
    function SearchEditor(editor){
       editors[editor].find("name=\"" + $(".sti[editor='" + editor + "']").val() + "\"",{
            backwards: true,
            wrap: false,
            caseSensitive: false,
            wholeWord: false,
            regExp: false
        });
        editors[editor].findNext();
        
    }

    function AddtoEd(typ, editor){
      if (typ == "struct"){
       editors[editor].gotoLine(editors[editor].session.getLength() );
       editors[editor].insert("&lt;struct name=\"" +  $(".sti[editor='" + editor + "']").val() + "\" &gt;\n//Add some attrs\n\n&lt;/struct&gt;\n\n");

       $(".sti[editor='" + editor + "']").val("");
      } else if (typ == "object") {
         editors[editor].gotoLine(editors[editor].session.getLength() );
       editors[editor].insert("&lt;object name=\"" +  $(".sti[editor='" + editor + "']").val() + "\" struct=\"\" &gt;\n\n&lt;/object&gt;\n\n");

       $(".sti[editor='" + editor + "']").val("");
      } else {
         editors[editor].gotoLine(editors[editor].session.getLength() );
       editors[editor].insert("&lt;method name=\"" +  $(".sti[editor='" + editor + "']").val() + "\" var=\"\" return=\"\"  &gt;\n\n&lt;/method&gt;\n\n");

       $(".sti[editor='" + editor + "']").val("");
      }
     
    }


       function SaveFileWeb(editor, link,pkv){
      
        var payload = {type:"3",target:link,pkg:pkv};
        payload["data"] = editors[editor].getValue();
      $.ajax({url:"/api/put", data: payload ,type:"POST",success:function(html){
        $(".side-bay").html(html);
      },error:function(e){
        $(".side-bay").html(e.responseText);
      }
    });
    }
      function SaveFileSrc(editor, link,pkv){
      
        var payload = {type:"30",target:link,pkg:pkv};
        payload["data"] = editors[editor].getValue();
      $.ajax({url:"/api/put", data: payload ,type:"POST",success:function(html){
        $(".side-bay").html(html);
      },error:function(e){
        $(".side-bay").html(e.responseText);
      }
    });
    }

    $(function () { 
      $('#jstree').on('changed.jstree', function (e, data) {
        var node = data.instance.get_node(data.selected[0]).original;
        if(node){
        if(!working && node.type != "" ){
          working = true;
    $(".loader-prog").css("display","block");
          $.ajax({url:"/api/get",type:"POST",data:{space:node.appid,type:node.type,id:node.id}, error:function(e){
              working = false;
              $(".loader-prog").css("display","none");
              $(".ready-three").append($(e.responseText) );
            
          } 
        });
        }
              //attempt request
          }
        }).jstree({
          'core' : {
            'data' : {
              'url' : function (node) {
                return '/api/get';
              },
              'type' : 'POST'
              ,
              'data' : function (node) {
                return node.id == "#" ? {'type' : '0'} : { 'id' : node.id, 'type' : node.type };
              }
            }
          },
          "plugins" : [ "contextmenu","state" ],
          "contextmenu": {
                 "select_node" : false ,
                  "items": function ($node) {
                      var menu = {};

                      if ($node.original.ctype){
                          menu["Create"] = {
                              "label": "Create",
                              "action": function (obj) {
                                 havop("/api/create?type=" + $node.original.ctype + "&pkg=" + $node.original.appid,".side-bay");
                              }
                          };
                        }

                      if ($node.original.btype){
                         menu["Build"] = {
                              "label": "Build",
                              "action": function (obj) {
                                BuildPKG($node.original.appid);
                              }
                          };
                      }

                      if ($node.original.mtype){
                          menu["Move"] = {
                              "label": "Move",
                              "action": function (obj) {
                                 havop("/api/create?type=" + $node.original.mtype + "&pkg=" + $node.original.appid,".side-bay");
                              }
                          };
                        }
                        if ($node.original.dtype){
                          menu["Delete"] = {
                              "label": "Delete",
                              "action": function (obj) {
                                 havop("/api/delete?type=" + $node.original.dtype + "&pkg=" + $node.original.appid,".side-bay");
                              }
                          };
                        }
                        /*  "Rename": {
                              "label": "Rename an employee",
                              "action": function (obj) {
                                  this.rename(obj);
                              }
                          },
                          "Delete": {
                              "label": "Delete an employee",
                              "action": function (obj) {
                                  this.remove(obj);
                              }
                          }
                      }; */

              

                      return menu;
                  }
              }
          });
    });

      function makeid()
      {
          var text = "";
          var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

          for( var i=0; i < 10; i++ )
              text += possible.charAt(Math.floor(Math.random() * possible.length));

          return text;
      }

    function hideAll(){
      $(".cbn").css('display','none');
    }

    function rmGroup(id){
      $("#" + id).remove();
    }

    function mready(id){
  
       $(".xtab").removeClass("active");
       $(".tabview").removeClass("active");
       $(".nav-link.xtab").removeClass("factive");
       $("a[target='" + id + "']").addClass("factive")
       $("#" + id).addClass("active");
    }

    function addTab(name, elementid){
      if(!editors["tabnames"]){
          editors["tabnames"] = ["tab","map"]
      }
      if (editors.tabnames.indexOf(name) != -1){
          var currentlink = $("a[data-name='" + name + "']")
 
          $("#" + elementid).remove()
          $(".xnavs").scrollLeft(currentlink.offset().left)
          currentlink.click()

      } else {
        tabj[elementid] = name;
        mready(elementid);
        $(".xnavs").prepend('<li class="nav-item"><a data-name="' + name +'" class="nav-link xtab factive active" target="' + elementid + '" href="#">' + name +' <button style="margin-left:15px;" type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></a></li>');
        $("a[target='" + elementid + "']").click(function(){
          //show tab 
          mready(elementid);
          return false;
        });
        $("a[target='" + elementid + "'] .close").click(function(){
          //show tab 
          $(this).parents("li").remove();
          delete tabj[elementid];
          editors.tabnames.splice(editors.tabnames.indexOf(name),1)
          if (editors[elementid ]){
          delete editors[elementid];
          }
          if (editors[elementid + "c"]){
            delete editors[elementid + "c"]
          }
          $("#" + elementid).remove();
          return false;
        });
        editors.tabnames.push(name)
      }
    }

    function updateTree(){
      $("#jstree").jstree('refresh')
    }
    </script>
 
  </body>
</html>